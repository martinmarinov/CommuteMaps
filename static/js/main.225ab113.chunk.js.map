{"version":3,"sources":["app/utils/CityData.ts","app/model/MapnificentNetwork.ts","app/utils/QuadTree.ts","app/model/Model.ts","app/model/ModelFetcher.tsx","app/utils/ArrayBufferFetcher.ts","app/map/MapRender.tsx","app/utils/QueryState.tsx","app/utils/QueryStateCodecs.ts","app/pages/city/CityMap.tsx","app/ui/ModalAlert.tsx","app/ui/GoHomeButton.tsx","app/ui/ProgressBar.tsx","app/ui/MapNavigationDrawer.tsx","app/Constants.tsx","app/AppMainNavigationList.tsx","app/utils/DrawLib.ts","app/map/CanvasOverlay.tsx","app/utils/GeoUtils.ts","app/model/CompiledModel.ts","app/model/ModelCompiler.tsx","app/model/CompiledModelOverlay.tsx","app/map/MapMarker.tsx","app/ui/PaperMapMarker.tsx","app/pages/city/ModelMapMarker.tsx","app/model/ModelMarker.ts","app/views/BestCommonTravelView.tsx","app/views/LineChangeView.tsx","app/views/ViewsRegistry.tsx","app/pages/city/ViewChooser.tsx","app/pages/city/Attribution.tsx","app/pages/city/CityPage.tsx","app/pages/home/CityChooser.tsx","app/pages/home/CityMarker.tsx","app/pages/home/HomeMap.tsx","app/pages/home/HomePage.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["parseCopyrightData","copyrightMetadata","undefined","ownerInfo","description","Object","entries","map","cityArray","preCompiled","binFile","binFileRelative","cityid","cityMetadata","cityname","zoom","position","coordinates","LatLng","lat","lng","copyright","MapnificentNetwork","Type","d","Field","Message","decodeFromArrayBuffer","arraybuffer","Promise","resolve","reject","decode","Uint8Array","e","cloneLatLngBounds","bounds","LatLngBounds","getSouthWest","getNorthEast","QuadTree","poiWrapper","searchBounds","pois","northWest","northEast","southWest","southEast","this","center","getCenter","getWest","getNorth","getSouth","getEast","nullthrows","i","length","_insert","poi","contains","extend","push","_subdivide","intersects","filter","payload","getIntersecting","wrappedPois","poiBounds","forEach","tree","quadTreeFromAreaPois","fromPois","loadModel","network","allStopsById","Stops","stop","Latitude","Longitude","id","searchTree","toBounds","ModelContext","createContext","useModelContext","useContext","ModelFetcher","city","children","loadingPlaceholder","onModelLoadError","onModelLoadProgress","useState","model","setModel","useEffect","dataUrl","onProgress","oReq","XMLHttpRequest","open","responseType","addEventListener","oEvent","lengthComputable","percentComplete","loaded","total","onload","ev","target","response","ontimeout","send","then","newModel","catch","Provider","value","MapRender","mapTileProvider","initialCenter","initialZoom","onCenterChange","onZoomChange","setMap","onMove","useCallback","onZoom","getZoom","on","off","MapContainer","fadeAnimation","zoomAnimation","zoomControl","whenCreated","ZoomControl","TileLayer","attribution","url","titleUrl","defaultJsonCodec","encoder","vals","JSON","stringify","decoder","raw","parse","useQueryParameterState","key","initialValue","pushToHistory","codec","queryState","useQueryStateContext","useMemo","stringValue","get","setValue","set","QueryStateContext","QueryState","props","location","useLocation","history","useHistory","query","URLSearchParams","search","delete","newUrl","createPath","toString","replace","reduceLatLngNumberOfDigits","_key","val","toFixed","Number","useModelMarkersState","decodedValue","splice","newValue","clonedValue","useQueryArrayParameterState","marker","maxTravelTime","v","CityMap","view","setZoom","parsed","setCenter","component","useStyles","makeStyles","theme","createStyles","modal","display","alignItems","justifyContent","outline","alert","maxWidth","contentGrid","padding","spacing","ModalAlert","title","severity","classes","childArray","Modal","className","Fade","in","Alert","AlertTitle","Grid","container","direction","child","item","GoHomeButton","Button","variant","color","disableElevation","Link","to","ProgressBar","progress","LinearProgress","Box","width","mr","minWidth","Typography","Math","round","hoverMenu","top","left","zIndex","margin","list","MapNavigationDrawer","alwaysVisibleComponent","expanded","setExpanded","Paper","elevation","Toolbar","IconButton","onClick","edge","aria-label","Icon","Drawer","anchor","onClose","role","DEFAULT_MAP_TILE_PROVIDER","SOURCE_CODE_LOCATION","dialogList","About","setOpen","ListItem","button","ListItemIcon","ListItemText","primary","href","List","AppMainNavigationList","DrawLib","ctx","tileInfo","fillStyle","globalCompositeOperation","fillRect","tileSizePx","x","y","centerPx","toLocalPixels","topLeftPx","getNorthWest","radPx","beginPath","arc","PI","fill","OverlayGridLayer","onRender","options","coords","_map","tile","DomUtil","create","getTileSize","setAttribute","unproject","add","Point","scaleBy","z","tileBounds","latLngToLayerPoint","getContext","latLng","point","GridLayer","CanvasOverlay","modelContext","leafContext","useLeafletContext","layerContainer","overlayLayer","addLayer","removeLayer","timeToDistance","minutes","distanceToTime","distanceMeters","findAllReachableStops","initialPosition","toVisit","Denque","visitedStopIds","enqueueStopsYouCanTravelTo","originStop","travelOptions","modelStop","TravelOptions","travelOption","destinationStop","Stop","WalkDistance","walkingDistance","walkingTime","timeRemainingAfterReached","remainingTime","lineChanges","enqueueStopsByWalking","TravelTime","travelTime","StayTime","Line","line","enqueueStopsByTraveling","visitStop","visitedBefore","min","distanceToStop","distanceTo","timeToStop","enqueueStopsWithinWalkingDistance","isEmpty","pop","compileModel","walkTime","maxWalkTmeFromOrigin","allPois","CompiledModelsContext","compiledModelReducer","state","action","newState","compiledModel","ModelCompiler","markers","lastUsedModel","useRef","useReducer","compiledModels","dispatchCompiledModels","dirtyPositions","modelHasCHanged","current","marker_id","deletedMarkersCount","CompiledModelOverlay","MapMarker","onPositionChange","icon","eventHandler","dragend","event","getLatLng","Marker","draggable","eventHandlers","paper","commuteMapIncon","iconUrl","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","PaperMapMarker","closeButton","Popup","sliderContainerWithButtons","sliderContainerWithoutButtons","deleteButton","ModelMapMarker","onMarkerChange","onMarkerDelete","setMarkerPosition","newPosition","setTravelTime","newTravelTime","xs","Slider","step","max","valueLabelDisplay","onChange","_event","size","fontSize","defaultModelMarker","getSouthEast","useGlobalModelMarkersState","drawCircle","BestCommonTravelView","marker1","marker2","setMarker","newMarker","sortPoi","a","b","flat","sort","getPoiColor","LineChangeView","ALL_VIEWS","short_name","VIEWS_BY_KEY","Map","DEFAULT_VIEW","ViewChooser","onViewKeyChosen","infoOpen","setInfoOpen","Select","style","MenuItem","p","TransportDataAttribution","c","linkTarget","MapDataAttribution","HTMLReactParser","OpenSourceAttribution","Attribution","CITY_MAP","CITY_DATA","ModelLoadError","modelLoadError","console","error","CityNotFoundError","LoadingCityInfo","modelLoadProgress","CityPageContent","param","setModelLoadError","setModelLoadProgress","viewKey","setViewKey","Divider","CityPage","useParams","CssTextField","withStyles","root","borderWidth","TextField","CityChooser","label","onCityChosen","Autocomplete","disableClearable","getOptionLabel","newCity","popupIcon","forcePopupIcon","renderInput","params","onOpen","CityMarker","onSelected","fullWidth","HomeMap","HomePage","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.225ab113.chunk.js","sourcesContent":["import { LatLng } from \"leaflet\";\nimport preval from \"preval.macro\";\n\nconst availableCitiesMetadata = preval`\nconst glob = require(\"glob\");\nconst path = require(\"path\");\nconst YAML = require(\"yaml\");\nconst fs = require(\"fs\");\n\nconst root = \"./public\";\nconst toRelative = (file) => path.relative(root, file);\n\nconst cityFolders = glob.sync(root + \"/mapnificent_cities/*/\");\nmodule.exports = cityFolders.map((folder) => {\n  const cityFolder = path.basename(folder);\n  const binFile = path.format({ root: folder, name: cityFolder, ext: \".bin\" });\n  const yamlFile = path.format({ root: folder, name: cityFolder, ext: \".md\" });\n  const yamlContent = fs.readFileSync(yamlFile, \"utf8\");\n  const cityMetadata = YAML.parseAllDocuments(yamlContent);\n  return {\n    binFileRelative: toRelative(binFile),\n    cityMetadata: cityMetadata[0],\n    copyrightMetadata: cityMetadata[1],\n  };\n})\n.sort((a, b) => \n  a.cityMetadata.get(\"cityname\").localeCompare(b.cityMetadata.get(\"cityname\"))\n);\n`;\n\nexport type CopyrightInfo = {\n  ownerInfo: string;\n  description: string | null;\n};\n\nexport type City = {\n  binFile: string;\n  cityid: string;\n  cityname: string;\n  description: string;\n  zoom: number;\n  position: LatLng;\n  copyright: CopyrightInfo[] | undefined;\n};\n\nconst parsePositionFromCityMetadata = (cityMetadata: any): LatLng => {\n  if (cityMetadata.coordinates !== undefined) {\n    return new LatLng(cityMetadata.coordinates[1], cityMetadata.coordinates[0]);\n  } else {\n    return new LatLng(cityMetadata.lat, cityMetadata.lng);\n  }\n};\n\nconst parseCopyrightData = (\n  copyrightMetadata: any\n): CopyrightInfo[] | undefined => {\n  if (copyrightMetadata === undefined || copyrightMetadata === null) {\n    return undefined;\n  }\n  if (typeof copyrightMetadata === \"string\") {\n    return [{ ownerInfo: copyrightMetadata as string, description: null }];\n  }\n  return Object.entries(copyrightMetadata).map(([ownerInfo, description]) => {\n    return {\n      ownerInfo: ownerInfo as string,\n      description: (description as string | null) ?? null,\n    };\n  });\n};\n\nconst cityArray: City[] = availableCitiesMetadata.map(\n  (preCompiled: any): City => {\n    return {\n      binFile: process.env.PUBLIC_URL + \"/\" + preCompiled.binFileRelative,\n      cityid: preCompiled.cityMetadata.cityid as string,\n      cityname: preCompiled.cityMetadata.cityname as string,\n      description: preCompiled.cityMetadata.description as string,\n      zoom: preCompiled.cityMetadata.zoom as number,\n      position: parsePositionFromCityMetadata(preCompiled.cityMetadata),\n      copyright: parseCopyrightData(preCompiled.copyrightMetadata),\n    };\n  }\n);\nexport default cityArray;\n","import { Field, Message, Type } from \"protobufjs/light\";\n\n@Type.d(\"TravelOption\")\nexport class TravelOption extends Message<TravelOption> {\n  @Field.d(1, \"uint32\")\n  Stop!: number;\n\n  @Field.d(2, \"uint32\")\n  TravelTime?: number;\n\n  @Field.d(3, \"uint32\")\n  StayTime?: number;\n\n  @Field.d(4, \"string\")\n  Line?: string;\n\n  @Field.d(5, \"uint32\")\n  WalkDistance?: number;\n}\n@Type.d(\"Stop\")\nexport class Stop extends Message<Stop> {\n  @Field.d(1, \"double\")\n  Latitude?: number;\n\n  @Field.d(2, \"double\")\n  Longitude?: number;\n\n  @Field.d(3, \"TravelOption\", \"repeated\")\n  TravelOptions?: Array<TravelOption>;\n\n  @Field.d(4, \"string\")\n  Name?: string;\n}\n\n@Type.d(\"LineTime\")\nexport class LineTime extends Message<LineTime> {\n  @Field.d(1, \"uint32\")\n  Interval!: number;\n\n  @Field.d(2, \"uint32\")\n  Start!: number;\n\n  @Field.d(3, \"uint32\")\n  Stop!: number;\n\n  @Field.d(4, \"uint32\")\n  Weekday!: number;\n}\n\n@Type.d(\"Line\")\nexport class Line extends Message<Line> {\n  @Field.d(1, \"string\")\n  LineId!: string;\n\n  @Field.d(2, \"LineTime\", \"repeated\")\n  LineTimes!: Array<LineTime>;\n\n  @Field.d(3, \"string\")\n  Name?: string;\n}\n\n@Type.d(\"MapnificentNetwork\")\nexport default class MapnificentNetwork extends Message<MapnificentNetwork> {\n  @Field.d(1, \"string\")\n  Cityid!: string;\n\n  @Field.d(2, \"Stop\", \"repeated\")\n  Stops!: Array<Stop>;\n\n  @Field.d(3, \"Line\", \"repeated\")\n  Lines!: Array<Line>;\n\n  static decodeFromArrayBuffer = (arraybuffer: ArrayBuffer) => {\n    return new Promise<MapnificentNetwork>((resolve, reject) => {\n      try {\n        const message = MapnificentNetwork.decode(new Uint8Array(arraybuffer));\n        resolve(message);\n      } catch (e) {\n        reject(e as Error);\n      }\n    });\n  };\n}\n","import { LatLng, LatLngBounds } from \"leaflet\";\nimport nullthrows from \"nullthrows\";\n\nconst NODE_MAX_CAPACITY = 32;\n\ntype WrappedPoi<T> = {\n  bounds: LatLngBounds;\n  payload: T;\n};\n\ntype PoiWrapper<T> = (poi: T) => WrappedPoi<T>;\n\nconst cloneLatLngBounds = (bounds: LatLngBounds) =>\n  new LatLngBounds(bounds.getSouthWest(), bounds.getNorthEast());\n\nexport class QuadTree<T> {\n  bounds: LatLngBounds; // bounds encompasing center of all pois contained\n  searchBounds: LatLngBounds; // outer bounds that wrap all pois including their areas\n  pois?: WrappedPoi<T>[];\n  northWest?: QuadTree<T>;\n  northEast?: QuadTree<T>;\n  southWest?: QuadTree<T>;\n  southEast?: QuadTree<T>;\n  poiWrapper: PoiWrapper<T>; // adapter that allows us to abstract poi attributes\n\n  private constructor(bounds: LatLngBounds, poiWrapper: PoiWrapper<T>) {\n    this.bounds = bounds;\n    // This is mutable so we need to clone to avoid changing references\n    this.searchBounds = cloneLatLngBounds(bounds);\n    this.pois = []; // We start with lead tree\n    this.northWest = undefined;\n    this.northEast = undefined;\n    this.southWest = undefined;\n    this.southEast = undefined;\n    this.poiWrapper = poiWrapper;\n  }\n\n  static fromPois<T>(pois: Array<T>, poiWrapper: PoiWrapper<T>): QuadTree<T> {\n    if (pois.length === 0) {\n      // Empty tree\n      return new QuadTree<T>(new LatLngBounds([0, 0], [0, 0]), poiWrapper);\n    }\n\n    const wrappedPois = pois.map(poiWrapper);\n    const poiBounds = wrappedPois.map((poi) => poi.bounds);\n\n    let bounds = cloneLatLngBounds(poiBounds[0]);\n    poiBounds.forEach((poi) => (bounds = bounds.extend(poi)));\n\n    const tree = new QuadTree<T>(bounds, poiWrapper);\n    wrappedPois.forEach((poi) => tree._insert(poi));\n    return tree;\n  }\n\n  private _subdivide(): void {\n    // This transforms a leaf tree to a node tree\n    const bounds = this.bounds;\n    const center = bounds.getCenter();\n\n    this.northWest = new QuadTree(\n      new LatLngBounds(\n        new LatLng(center.lat, bounds.getWest()),\n        new LatLng(bounds.getNorth(), center.lng)\n      ),\n      this.poiWrapper\n    );\n    this.northEast = new QuadTree(\n      new LatLngBounds(bounds.getNorthEast(), bounds.getCenter()),\n      this.poiWrapper\n    );\n    this.southWest = new QuadTree(\n      new LatLngBounds(bounds.getCenter(), bounds.getSouthWest()),\n      this.poiWrapper\n    );\n    this.southEast = new QuadTree(\n      new LatLngBounds(\n        new LatLng(bounds.getSouth(), center.lng),\n        new LatLng(center.lat, bounds.getEast())\n      ),\n      this.poiWrapper\n    );\n\n    const pois = nullthrows(this.pois);\n    for (let i = 0; i < pois.length; i += 1) {\n      if (this.northWest._insert(pois[i])) {\n        continue;\n      }\n      if (this.northEast._insert(pois[i])) {\n        continue;\n      }\n      if (this.southWest._insert(pois[i])) {\n        continue;\n      }\n      this.southEast._insert(pois[i]);\n    }\n    this.pois = undefined; // Node trees do not contain pois\n  }\n\n  private _insert(poi: WrappedPoi<T>): boolean {\n    if (!this.bounds.contains(poi.bounds.getCenter())) {\n      // If poi does not fit within center bounds, we can't accommodate it\n      return false;\n    }\n\n    // Grow search bounds to ensure the current point is covered\n    // Note extend mutates the original object but I'm still assigning\n    // to future proof in case the API changes to a non-mutable one\n    this.searchBounds = this.searchBounds.extend(poi.bounds);\n\n    if (this.pois !== undefined) {\n      // if we are a leaf tree\n      if (this.pois.length < NODE_MAX_CAPACITY) {\n        this.pois.push(poi);\n        return true;\n      } else {\n        // If we cross the leaf tree max capacity\n        // covert the tree to a node tree to quadruple capacity\n        this._subdivide();\n      }\n    }\n\n    // If we are a nodde tree, try to insert recursively\n    // it's guaranteed that at least one of the subtrees\n    // will accept our poi\n    if (nullthrows(this.northWest)._insert(poi)) {\n      return true;\n    }\n    if (nullthrows(this.northEast)._insert(poi)) {\n      return true;\n    }\n    if (nullthrows(this.southWest)._insert(poi)) {\n      return true;\n    }\n    return nullthrows(this.southEast)._insert(poi);\n  }\n\n  getIntersecting(searchBounds: LatLngBounds): T[] {\n    // The search bounds of the tree contain the bounds of the poi with largest radius.\n    // This ensures we can never miss a big poi that crosses several neighboring trees.\n    if (!this.searchBounds.intersects(searchBounds)) {\n      return [];\n    }\n\n    // If we are a leaf, try to find internal result\n    if (this.pois !== undefined) {\n      return this.pois\n        .filter((poi) => poi.bounds.intersects(searchBounds))\n        .map((poi) => poi.payload);\n    }\n\n    // If we are a node, iterate through children\n    return [\n      ...nullthrows(this.northWest).getIntersecting(searchBounds),\n      ...nullthrows(this.northEast).getIntersecting(searchBounds),\n      ...nullthrows(this.southWest).getIntersecting(searchBounds),\n      ...nullthrows(this.southEast).getIntersecting(searchBounds),\n    ];\n  }\n}\n\nexport interface Poi {\n  position: LatLng;\n}\n\nexport const quadTreeFromPois = <T extends Poi>(pois: T[]) => {\n  return QuadTree.fromPois(pois, (poi: T) => {\n    return {\n      bounds: poi.position.toBounds(0),\n      payload: poi,\n    };\n  });\n};\nexport interface AreaPoi {\n  bounds: LatLngBounds;\n}\n\nexport const quadTreeFromAreaPois = <T extends AreaPoi>(pois: T[]) => {\n  return QuadTree.fromPois(pois, (poi: T) => {\n    return {\n      bounds: poi.bounds,\n      payload: poi,\n    };\n  });\n};\n","import { LatLng } from \"leaflet\";\nimport nullthrows from \"nullthrows\";\nimport { QuadTree, quadTreeFromPois } from \"../utils/QuadTree\";\nimport MapnificentNetwork, { Stop } from \"./MapnificentNetwork\";\n\nexport type ModelStop = {\n  id: number;\n  position: LatLng;\n  stop: Stop;\n};\n\nexport type Model = {\n  searchTree: QuadTree<ModelStop>;\n  allStopsById: Array<ModelStop>;\n};\n\nexport function loadModel(network: MapnificentNetwork) {\n  return new Promise<Model>((resolve, reject) => {\n    const allStopsById = network.Stops.filter(\n      (stop: Stop) =>\n        stop.Latitude !== undefined && stop.Longitude !== undefined\n    ).map((stop: Stop, id: number) => {\n      return {\n        id,\n        position: new LatLng(\n          nullthrows(stop.Latitude),\n          nullthrows(stop.Longitude)\n        ),\n        stop,\n      };\n    });\n    resolve({\n      searchTree: quadTreeFromPois(allStopsById),\n      allStopsById,\n    });\n  });\n}\n","import React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport MapnificentNetwork from \"./MapnificentNetwork\";\nimport { fetchArrayBuffer } from \"../utils/ArrayBufferFetcher\";\nimport { City } from \"../utils/CityData\";\nimport nullthrows from \"nullthrows\";\nimport { loadModel, Model } from \"./Model\";\n\nexport interface ModelContextInterface {\n  model: Model;\n  city: City;\n}\nexport const ModelContext = createContext<ModelContextInterface | null>(null);\nexport function useModelContext(): ModelContextInterface {\n  return nullthrows(\n    useContext(ModelContext),\n    \"No model provided: useModelContext() can only be used in a descendant of <ModelFetcher>\"\n  );\n}\n\ntype Props = {\n  city: City;\n  children: ReactNode;\n  loadingPlaceholder?: ReactNode;\n  onModelLoadError: (reason: any) => void;\n  onModelLoadProgress: (progress?: number) => void;\n};\n\nexport const ModelFetcher = ({\n  city,\n  children,\n  loadingPlaceholder,\n  onModelLoadError,\n  onModelLoadProgress,\n}: Props) => {\n  const [model, setModel] = useState<Model | null>(null);\n\n  useEffect(() => {\n    fetchArrayBuffer(city.binFile, onModelLoadProgress)\n      .then(MapnificentNetwork.decodeFromArrayBuffer)\n      .then(loadModel)\n      .then((newModel: Model) => setModel(newModel))\n      .catch(onModelLoadError);\n  }, [city.binFile, onModelLoadError, onModelLoadProgress]);\n\n  if (model !== null) {\n    return (\n      <ModelContext.Provider\n        value={{\n          model,\n          city,\n        }}\n      >\n        {children}\n      </ModelContext.Provider>\n    );\n  } else {\n    return <>{loadingPlaceholder}</>;\n  }\n};\n","export function fetchArrayBuffer(\n  dataUrl: string,\n  onProgress: (progress?: number) => void\n) {\n  return new Promise<ArrayBuffer>((resolve, reject) => {\n    const oReq = new XMLHttpRequest();\n    oReq.open(\"GET\", dataUrl, true);\n    oReq.responseType = \"arraybuffer\";\n\n    oReq.addEventListener(\"progress\", (oEvent) => {\n      if (oEvent.lengthComputable) {\n        let percentComplete = (oEvent.loaded / oEvent.total) * 100;\n        onProgress(percentComplete);\n      } else {\n        onProgress();\n      }\n    });\n\n    oReq.onload = (ev: ProgressEvent) => {\n      const target = ev.target as XMLHttpRequest | null | undefined;\n      const arraybuffer = target?.response as ArrayBuffer | null | undefined;\n      if (arraybuffer !== null && arraybuffer !== undefined) {\n        resolve(arraybuffer);\n      } else {\n        reject(\"Failed fetching data\");\n      }\n    };\n    oReq.ontimeout = (ev: ProgressEvent) => {\n      reject(\"Timeout\");\n    };\n    oReq.send();\n  });\n}\n","import React, { ReactNode, useCallback, useEffect, useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, ZoomControl } from \"react-leaflet\";\nimport { LatLng, LatLngExpression, Map as LeafletMap } from \"leaflet\";\nimport nullthrows from \"nullthrows\";\n\nexport type MapTileProvider = {\n  titleUrl: string;\n  attribution: string;\n};\n\ntype Props = {\n  id?: string;\n  children?: ReactNode;\n  mapTileProvider: MapTileProvider;\n  initialCenter: LatLngExpression;\n  initialZoom?: number;\n  onCenterChange?: (center: LatLng) => void;\n  onZoomChange?: (zoom: number) => void;\n};\n\nexport const MapRender = ({\n  id,\n  children,\n  mapTileProvider,\n  initialCenter,\n  initialZoom,\n  onCenterChange,\n  onZoomChange,\n}: Props) => {\n  const [map, setMap] = useState<LeafletMap>();\n\n  const onMove = useCallback(\n    () => onCenterChange && onCenterChange(nullthrows(map).getCenter()),\n    [map, onCenterChange]\n  );\n\n  const onZoom = useCallback(\n    () => onZoomChange && onZoomChange(nullthrows(map).getZoom()),\n    [map, onZoomChange]\n  );\n\n  useEffect(() => {\n    if (map !== undefined) {\n      map.on(\"moveend\", onMove);\n      map.on(\"zoomend\", onZoom);\n      return () => {\n        map.off(\"moveend\", onMove);\n        map.off(\"zoomend\", onZoom);\n      };\n    }\n  }, [map, onMove, onZoom, onCenterChange, onZoomChange]);\n\n  return (\n    <MapContainer\n      id={id}\n      center={initialCenter}\n      zoom={initialZoom}\n      fadeAnimation={false}\n      zoomAnimation={false}\n      zoomControl={false}\n      whenCreated={setMap}\n    >\n      <ZoomControl position=\"bottomleft\" />\n      <TileLayer\n        attribution={mapTileProvider.attribution}\n        url={mapTileProvider.titleUrl}\n      />\n      {children}\n    </MapContainer>\n  );\n};\n","import nullthrows from \"nullthrows\";\nimport {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { createPath } from \"history\";\n\nconst defaultJsonCodec = {\n  encoder: function <T>(vals: T): string {\n    return JSON.stringify(vals);\n  },\n  decoder: function <T>(raw: string): T {\n    return JSON.parse(raw) as T;\n  },\n};\n\nexport const useQueryArrayParameterState = function <T>(\n  key: string,\n  initialValue: T[],\n  pushToHistory: boolean,\n  codec: {\n    encoder: (vals: T[]) => string;\n    decoder: (raw: string) => T[];\n  } = defaultJsonCodec\n): [T[], (id: number, newValue?: T) => void] {\n  const queryState = useQueryStateContext();\n\n  const value = useMemo(() => {\n    const stringValue = queryState.get(key);\n\n    if (stringValue === null) {\n      return initialValue;\n    }\n    const decodedValue = codec.decoder(stringValue);\n\n    // Make sure decoded value doesn't have too many elements, if it does, trim\n    decodedValue.splice(initialValue.length);\n\n    // If decoded value doesn't have enough elements, add some\n    for (let id = decodedValue.length; id < initialValue.length; id++) {\n      decodedValue.push(initialValue[id]);\n    }\n    return decodedValue;\n  }, [queryState, key, codec, initialValue]);\n\n  const setValue = useCallback(\n    (id: number, newValue?: T) => {\n      const clonedValue = [...value]; // needed to avoid mutating result of useMemo\n      if (newValue !== undefined) {\n        clonedValue[id] = newValue;\n      } else {\n        clonedValue.splice(id, 1);\n      }\n      queryState.set(key, codec.encoder(clonedValue), pushToHistory);\n    },\n    [queryState, key, codec, pushToHistory, value]\n  );\n\n  return [value, setValue];\n};\n\nexport const useQueryParameterState = function <T>(\n  key: string,\n  initialValue: T,\n  pushToHistory: boolean,\n  codec: {\n    encoder: (vals: T) => string;\n    decoder: (raw: string) => T;\n  } = defaultJsonCodec\n): [T, (newValue: T) => void] {\n  const queryState = useQueryStateContext();\n\n  const value = useMemo(() => {\n    const stringValue = queryState.get(key);\n    return stringValue == null ? initialValue : codec.decoder(stringValue);\n  }, [queryState, key, codec, initialValue]);\n\n  const setValue = useCallback(\n    (value: T) => queryState.set(key, codec.encoder(value), pushToHistory),\n    [queryState, key, codec, pushToHistory]\n  );\n\n  return [value, setValue];\n};\n\ninterface QueryParamsStateContextIngerface {\n  get: (key: string) => string | null;\n  set: (key: string, value: string | null, pushToHistory: boolean) => void;\n}\nconst QueryStateContext = createContext<QueryParamsStateContextIngerface | null>(\n  null\n);\nfunction useQueryStateContext() {\n  return nullthrows(\n    useContext(QueryStateContext),\n    \"useQueryStateContext can only be used in a descendant of <QueryState>\"\n  );\n}\n\nexport const QueryState = (props: { children: ReactNode }) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const query = useMemo(() => new URLSearchParams(location.search), [\n    location.search,\n  ]);\n\n  const get = useCallback((key: string): string | null => query.get(key), [\n    query,\n  ]);\n\n  const set = useCallback(\n    (key: string, value: string | null, pushToHistory: boolean) => {\n      if (value === query.get(key)) {\n        // No change needed\n        return;\n      }\n\n      // Mutating objects in React is frowned upon. However in this case it's fine.\n      // As location.search will change, query instance will be updated on next render due to the useMemo\n      // If other updates happen until then, it's fine as query will have the latest changes anyways\n      if (value !== null) {\n        query.set(key, value);\n      } else {\n        query.delete(key);\n      }\n      const newUrl = createPath({\n        ...location,\n        search: query.toString(),\n      });\n\n      if (pushToHistory) {\n        history.push(newUrl);\n      } else {\n        history.replace(newUrl);\n      }\n    },\n    [query, location, history]\n  );\n\n  return (\n    <QueryStateContext.Provider value={{ set, get }}>\n      {props.children}\n    </QueryStateContext.Provider>\n  );\n};\n","import { LatLng } from \"leaflet\";\nimport { ModelMarker } from \"../model/ModelMarker\";\nimport {\n  useQueryParameterState,\n  useQueryArrayParameterState,\n} from \"./QueryState\";\n\nconst reduceLatLngNumberOfDigits = (_key: any, val: any) =>\n  val.toFixed ? Number(val.toFixed(7)) : val;\n\nexport const useLatLngState = (\n  key: string,\n  initialValue: LatLng,\n  pushToHistory: boolean\n) => {\n  return useQueryParameterState(key, initialValue, pushToHistory, {\n    encoder: (position: LatLng): string =>\n      JSON.stringify([position.lat, position.lng], reduceLatLngNumberOfDigits),\n    decoder: (raw: string): LatLng => {\n      const parsed = JSON.parse(raw);\n      return new LatLng(parsed[0], parsed[1]);\n    },\n  });\n};\n\nexport const useModelMarkersState = (\n  key: string,\n  initialValue: ModelMarker[],\n  pushToHistory: boolean\n) => {\n  return useQueryArrayParameterState(key, initialValue, pushToHistory, {\n    encoder: (vals: ModelMarker[]): string =>\n      JSON.stringify(\n        vals.map((marker) => {\n          return [\n            marker.position.lat,\n            marker.position.lng,\n            marker.maxTravelTime,\n          ];\n        }),\n        reduceLatLngNumberOfDigits\n      ),\n    decoder: (raw: string): ModelMarker[] =>\n      JSON.parse(raw).map((v: any) => {\n        return {\n          position: new LatLng(v[0], v[1]),\n          maxTravelTime: v[2],\n        };\n      }),\n  });\n};\n","import React, { ReactNode } from \"react\";\nimport { ModelFetcher } from \"../../model/ModelFetcher\";\nimport { MapRender, MapTileProvider } from \"../../map/MapRender\";\nimport { City } from \"../../utils/CityData\";\nimport { useQueryParameterState } from \"../../utils/QueryState\";\nimport { useLatLngState } from \"../../utils/QueryStateCodecs\";\nimport { View } from \"../../views/ViewsRegistry\";\n\ntype Props = {\n  city: City;\n  view: View;\n  loadingPlaceholder: ReactNode;\n  mapTileProvider: MapTileProvider;\n  onModelLoadError: (reason: any) => void;\n  onModelLoadProgress: (progress?: number) => void;\n};\n\nexport const CityMap = ({\n  city,\n  mapTileProvider,\n  view,\n  loadingPlaceholder,\n  onModelLoadError,\n  onModelLoadProgress,\n}: Props) => {\n  const [zoom, setZoom] = useQueryParameterState(\"z\", city.zoom, false);\n  const [center, setCenter] = useLatLngState(\"c\", city.position, false);\n\n  return (\n    <MapRender\n      id=\"main_map\"\n      mapTileProvider={mapTileProvider}\n      initialCenter={center}\n      initialZoom={zoom}\n      onCenterChange={setCenter}\n      onZoomChange={setZoom}\n    >\n      <ModelFetcher\n        city={city}\n        loadingPlaceholder={loadingPlaceholder}\n        onModelLoadError={onModelLoadError}\n        onModelLoadProgress={onModelLoadProgress}\n      >\n        {view.component}\n      </ModelFetcher>\n    </MapRender>\n  );\n};\n","import {\n  Modal,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n  Fade,\n} from \"@material-ui/core\";\nimport { AlertTitle } from \"@material-ui/lab\";\nimport Alert, { Color as AlertColor } from \"@material-ui/lab/Alert\";\nimport React, { ReactNode, ReactChild, ReactNodeArray } from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: 0,\n    },\n    alert: {\n      maxWidth: 400,\n    },\n    contentGrid: {\n      padding: theme.spacing(1, 0, 0, 0),\n    },\n  })\n);\n\ntype Props = {\n  title: ReactNode;\n  children: ReactChild | ReactNodeArray;\n  severity: AlertColor;\n  open?: boolean;\n};\n\nexport const ModalAlert = ({\n  title,\n  children,\n  severity,\n  open = true,\n}: Props) => {\n  const classes = useStyles();\n  const childArray =\n    (children as any).length === undefined\n      ? ([children] as ReactNodeArray)\n      : (children as ReactNodeArray);\n  return (\n    <Modal open={open} className={classes.modal}>\n      <Fade in={open}>\n        <Alert severity={severity} className={classes.alert}>\n          <AlertTitle>{title}</AlertTitle>\n          <Grid\n            container\n            direction=\"column\"\n            spacing={2}\n            className={classes.contentGrid}\n          >\n            {childArray.map((child, id) => (\n              <Grid item key={`model_alert_grid_${id}`}>\n                {child}\n              </Grid>\n            ))}\n          </Grid>\n        </Alert>\n      </Fade>\n    </Modal>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport { ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const GoHomeButton = ({ children }: Props) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      disableElevation\n      component={Link}\n      to=\"/\"\n    >\n      {children}\n    </Button>\n  );\n};\n","import { LinearProgress, Box, Typography } from \"@material-ui/core\";\n\ntype Props = {\n  progress?: number;\n};\n\nexport const ProgressBar = ({ progress }: Props) => {\n  if (progress === undefined) {\n    return <LinearProgress />;\n  } else {\n    return (\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box width=\"100%\" mr={1}>\n          <LinearProgress variant=\"determinate\" value={progress} />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n            progress\n          )}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n};\n","import {\n  Drawer,\n  Icon,\n  IconButton,\n  makeStyles,\n  Paper,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { ReactNode, useState } from \"react\";\n\nconst useStyles = makeStyles({\n  hoverMenu: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    zIndex: 1001,\n    margin: \"10px\",\n    padding: \"5px\",\n  },\n  list: {\n    minWidth: 250,\n  },\n});\n\ntype Props = {\n  children?: ReactNode;\n  alwaysVisibleComponent: ReactNode;\n};\n\nexport const MapNavigationDrawer = ({\n  alwaysVisibleComponent,\n  children,\n}: Props) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <>\n      <Paper elevation={3} className={classes.hoverMenu}>\n        <Toolbar>\n          <IconButton\n            onClick={() => setExpanded(!expanded)}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <Icon>menu</Icon>\n          </IconButton>\n          {alwaysVisibleComponent}\n        </Toolbar>\n      </Paper>\n      <Drawer\n        anchor={\"left\"}\n        open={expanded}\n        onClose={() => setExpanded(false)}\n      >\n        <div className={classes.list} role=\"presentation\">\n          {children}\n        </div>\n      </Drawer>\n    </>\n  );\n};\n","// Controls the map provider\nexport const DEFAULT_MAP_TILE_PROVIDER = {\n  titleUrl:\n    \"//{s}.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}.png\",\n  attribution:\n    '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attribution\">CARTO</a>',\n};\n\nexport const SOURCE_CODE_LOCATION = \"https://github.com/martinmarinov/CommuteMaps\";\nexport const SOURCE_CODE_LOCATION_LABEL = \"CommuteMaps@github\";\n\n// This is a key assumption as it affects reachability\nexport const WALKING_SPEED_METERS_PER_MINUTE = 80.0;\n\n// People generally won't spend too much time walking, so let's limit\nexport const MAX_WALKING_TIME = 20.0;\n\n// How much time does it take to change from one line to another\nexport const LINE_CHANGE_TIME = 2.0;\n\n// Max number of times we're willing to switch between lines or walking\nexport const MAX_LINE_CHANGES = 4;\n\n// Assume nobody ever wants to travel longer than this\nexport const MAX_TRAVEL_TIME = 75;\n\nexport const MIN_TRAVEL_TIME = 5;\n\nexport const TRAVEL_TIME_STEP = 5;\n\n\n// Always start rendering the map with this travel time\nexport const DEFAULT_INITIAL_TRAVEL_TIME = 15;\n\nexport const MIN_WIDTH_OF_POPUP = 200;","import { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Icon,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  createStyles,\n  makeStyles,\n  Link as MaterialLink,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { ModalAlert } from \"./ui/ModalAlert\";\nimport { SOURCE_CODE_LOCATION, SOURCE_CODE_LOCATION_LABEL } from \"./Constants\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogList: {\n      padding: theme.spacing(0, 1, 1, 1),\n    },\n  })\n);\n\nexport const About = () => {\n  const [open, setOpen] = useState<boolean>(false);\n  const classes = useStyles();\n  return (\n    <>\n      <ListItem button key=\"about\" onClick={() => setOpen(true)}>\n        <ListItemIcon>\n          <Icon>help</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"About\" />\n      </ListItem>\n      <ModalAlert title=\"About CommuteMaps.com\" severity=\"info\" open={open}>\n        <Typography>\n          Full source:{\" \"}\n          <MaterialLink href={SOURCE_CODE_LOCATION} target=\"_blank\">\n            {SOURCE_CODE_LOCATION_LABEL}\n          </MaterialLink>\n        </Typography>\n        <Typography>\n          CommuteMaps.com creates public transport travel time maps for some of\n          the biggest cities in the world. It features different modes that\n          allow finding most convenient meeting spots or visualizing public\n          transport commute times. As a map print, these can also serve as a\n          stylish art poster wall decor.\n        </Typography>\n        <Typography>\n          This is an art project and should be regarded as such. The data used\n          has been generated automatically using simple heuristics which may\n          approximate but do not accurately reflect real world travel times.\n        </Typography>\n        <Typography>\n          The service and product comes with no warranties and may not be deemed\n          to be fit for any purpose. The user agrees that the service is\n          provided \"as is\" and \"as available\" without any warranty of any kind.\n          The user agrees that the developer or site owner shall not be held\n          accountable for any liabilities, fines or proceedings resulting of\n          usage of this service.\n        </Typography>\n        <List>\n          <ListItem className={classes.dialogList}>\n            <MaterialLink href=\"https://martinmarinov.info/\" target=\"_blank\">\n              Developer: Martin Marinov\n            </MaterialLink>\n          </ListItem>\n          <ListItem className={classes.dialogList}>\n            <MaterialLink href=\"https://www.sheza.design/\" target=\"_blank\">\n              Design: Snezhana Marinova\n            </MaterialLink>\n          </ListItem>\n        </List>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          onClick={() => setOpen(false)}\n        >\n          OK\n        </Button>\n      </ModalAlert>\n    </>\n  );\n};\n\nexport const AppMainNavigationList = () => {\n  return (\n    <List>\n      <ListItem button key=\"home\" component={Link} to=\"/\">\n        <ListItemIcon>\n          <Icon>home</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Start again\" />\n      </ListItem>\n      <About />\n    </List>\n  );\n};\n","import { LatLngBounds } from \"leaflet\";\nimport { TileInfo } from \"../map/CanvasOverlay\";\n\nexport default class DrawLib {\n  ctx: CanvasRenderingContext2D;\n  tileInfo: TileInfo;\n\n  constructor(ctx: CanvasRenderingContext2D, tileInfo: TileInfo) {\n    this.ctx = ctx;\n    this.tileInfo = tileInfo;\n  }\n\n  fill(fillStyle: string | CanvasGradient | CanvasPattern) {\n    this.ctx.globalCompositeOperation = \"source-over\";\n    this.ctx.fillStyle = fillStyle;\n    this.ctx.fillRect(\n      0,\n      0,\n      this.tileInfo.tileSizePx.x,\n      this.tileInfo.tileSizePx.y\n    );\n  }\n\n  drawCircle(\n    bounds: LatLngBounds,\n    fillStyle?: string | CanvasGradient | CanvasPattern\n  ) {\n    const centerPx = this.tileInfo.toLocalPixels(bounds.getCenter());\n    const topLeftPx = this.tileInfo.toLocalPixels(bounds.getNorthWest());\n    const radPx = centerPx.x - topLeftPx.x;\n\n    // Cutout pass\n    this.ctx.globalCompositeOperation = \"destination-out\";\n    this.ctx.fillStyle = 'rgba(1,1,1,1)';\n\n    this.ctx.beginPath();\n    this.ctx.arc(centerPx.x, centerPx.y, radPx, 0, 2 * Math.PI, false);\n    this.ctx.fill();\n\n    if (fillStyle !== undefined) {\n      // Stamp pass\n      this.ctx.globalCompositeOperation = \"source-over\";\n      this.ctx.fillStyle = fillStyle;\n\n      this.ctx.beginPath();\n      this.ctx.arc(centerPx.x, centerPx.y, radPx, 0, 2 * Math.PI, false);\n      this.ctx.fill();\n    }\n  }\n}\n","import { useLeafletContext } from \"@react-leaflet/core\";\nimport { Context, useContext, useEffect } from \"react\";\nimport {\n  GridLayer,\n  Coords,\n  Point,\n  LatLng,\n  LatLngBounds,\n  GridLayerOptions,\n  DomUtil,\n} from \"leaflet\";\nimport nullthrows from \"nullthrows\";\n\nexport type TileInfo = {\n  tileSizePx: Point;\n  tileBounds: LatLngBounds;\n  toLocalPixels: (latLng: LatLng) => Point;\n};\n\nexport type onRender<T> = (\n  model: T,\n  ctx: CanvasRenderingContext2D,\n  tileInfo: TileInfo\n) => void;\n\ntype Props<T> = {\n  modelContext: Context<T | null>;\n  onRender: onRender<T>;\n};\n\nclass OverlayGridLayer<T> extends GridLayer {\n  private model: T;\n  private onRender: onRender<T>;\n\n  constructor(onRender: onRender<T>, model: T, options?: GridLayerOptions) {\n    super(options);\n    this.model = model;\n    this.onRender = onRender;\n  }\n\n  createTile(coords: Coords) {\n    const map = this._map;\n    let htmlElement: any = DomUtil.create(\"canvas\", \"leaflet-tile\");\n    let tile: HTMLCanvasElement = htmlElement;\n\n    const tileSizePx = this.getTileSize();\n    tile.setAttribute(\"width\", tileSizePx.x.toString());\n    tile.setAttribute(\"height\", tileSizePx.y.toString());\n\n    const southWest = map.unproject(\n      coords.add(new Point(0, 1)).scaleBy(tileSizePx),\n      coords.z\n    );\n    const northEast = map.unproject(\n      coords.add(new Point(1, 0)).scaleBy(tileSizePx),\n      coords.z\n    );\n    const tileBounds = new LatLngBounds(southWest, northEast);\n\n    const topLeftPx = map.latLngToLayerPoint(tileBounds.getNorthWest());\n    const ctx = nullthrows(tile.getContext(\"2d\"));\n\n    const tileInfo = {\n      tileSizePx,\n      toLocalPixels: (latLng: LatLng) => {\n        const point = map.latLngToLayerPoint(latLng);\n        return new Point(point.x - topLeftPx.x, point.y - topLeftPx.y);\n      },\n      tileBounds,\n    };\n\n    this.onRender(this.model, ctx, tileInfo);\n    return tile;\n  }\n}\n\nexport function CanvasOverlay<T>({ onRender, modelContext }: Props<T>) {\n  const leafContext = useLeafletContext();\n  const model = nullthrows(\n    useContext(modelContext),\n    \"Invalid model context provided: Make sure the CanvasOverlay is wrapped in the correct model context provider\"\n  );\n  const container = leafContext.layerContainer || leafContext.map;\n\n  useEffect(() => {\n    const overlayLayer = new OverlayGridLayer(onRender, model);\n    container.addLayer(overlayLayer);\n    return () => {\n      container.removeLayer(overlayLayer);\n    };\n  }, [container, model, onRender]);\n\n  return null;\n}\n","import { WALKING_SPEED_METERS_PER_MINUTE } from \"../Constants\";\n\n// Returns time in minutes\nexport const timeToDistance = (minutes: number) => {\n  return minutes * WALKING_SPEED_METERS_PER_MINUTE;\n};\n\n// Returns distance in meters\nexport const distanceToTime = (distanceMeters: number) => {\n  return distanceMeters / WALKING_SPEED_METERS_PER_MINUTE;\n};\n","import { LatLng, LatLngBounds } from \"leaflet\";\nimport { distanceToTime, timeToDistance } from \"../utils/GeoUtils\";\nimport { QuadTree, quadTreeFromAreaPois } from \"../utils/QuadTree\";\nimport { Model, ModelStop } from \"./Model\";\nimport Denque from \"denque\";\nimport nullthrows from \"nullthrows\";\nimport {\n  LINE_CHANGE_TIME,\n  MAX_LINE_CHANGES,\n  MAX_WALKING_TIME,\n} from \"../Constants\";\nimport { TravelOption } from \"./MapnificentNetwork\";\nimport { ModelMarker } from \"./ModelMarker\";\n\nexport type ModelPoi = {\n  bounds: LatLngBounds;\n  lineChanges: number;\n  walkTime: number;\n};\n\nexport type CompiledModel = {\n  marker: ModelMarker;\n  allPois: QuadTree<ModelPoi>;\n};\n\ntype StopWithTime = {\n  modelStop: ModelStop;\n  remainingTime: number;\n  lineChanges: number;\n  line?: string;\n};\n\nconst findAllReachableStops = (\n  model: Model,\n  initialPosition: LatLng,\n  maxTravelTime: number\n) => {\n  const toVisit = new Denque<StopWithTime>();\n  const visitedStopIds: Array<StopWithTime> = [];\n\n  const enqueueStopsWithinWalkingDistance = (\n    position: LatLng,\n    remainingTime: number,\n    lineChanges: number\n  ) => {\n    const walkingTime = Math.min(remainingTime, MAX_WALKING_TIME);\n    model.searchTree\n      .getIntersecting(position.toBounds(2 * timeToDistance(walkingTime)))\n      .forEach((modelStop) => {\n        const distanceToStop = position.distanceTo(modelStop.position);\n        const timeToStop = distanceToTime(distanceToStop);\n        const timeRemainingAfterReached = remainingTime - timeToStop;\n        if (timeRemainingAfterReached > 0) {\n          toVisit.push({\n            modelStop,\n            remainingTime: timeRemainingAfterReached,\n            lineChanges: lineChanges + 1, // walking is always a line change\n          });\n        }\n      });\n  };\n\n  const enqueueStopsByWalking = (\n    originStop: StopWithTime,\n    destinationStop: ModelStop,\n    travelOption: TravelOption\n  ) => {\n    const walkingDistance = nullthrows(travelOption.WalkDistance);\n    const walkingTime = distanceToTime(walkingDistance);\n    if (walkingTime > MAX_WALKING_TIME) {\n      // we won't walk for that long\n      return;\n    }\n    const timeRemainingAfterReached = originStop.remainingTime - walkingTime;\n    if (timeRemainingAfterReached > 0) {\n      toVisit.push({\n        modelStop: destinationStop,\n        remainingTime: timeRemainingAfterReached,\n        lineChanges: originStop.lineChanges + 1, // walking is always a line change\n      });\n    }\n  };\n\n  const enqueueStopsByTraveling = (\n    originStop: StopWithTime,\n    destinationStop: ModelStop,\n    travelOption: TravelOption\n  ) => {\n    let travelTime = nullthrows(travelOption.TravelTime) / 60.0;\n    let lineChanges = originStop.lineChanges;\n    if (travelOption.StayTime !== undefined) {\n      // Need to wait as well\n      travelTime += travelOption.StayTime / 60.0;\n    }\n    if (\n      travelOption.Line !== originStop.line &&\n      travelOption.Line !== undefined\n    ) {\n      // We need to switch line, add penalty\n      travelTime += LINE_CHANGE_TIME;\n      lineChanges++;\n    }\n    const timeRemainingAfterReached = originStop.remainingTime - travelTime;\n    if (timeRemainingAfterReached > 0) {\n      toVisit.push({\n        modelStop: destinationStop,\n        remainingTime: timeRemainingAfterReached,\n        line: travelOption.Line,\n        lineChanges,\n      });\n    }\n  };\n\n  const enqueueStopsYouCanTravelTo = (originStop: StopWithTime) => {\n    const travelOptions = originStop.modelStop.stop.TravelOptions;\n    if (travelOptions === undefined || travelOptions.length === 0) {\n      // no travel options\n      return;\n    }\n\n    travelOptions.forEach((travelOption) => {\n      const destinationStop = model.allStopsById[travelOption.Stop];\n      if (destinationStop === undefined) {\n        // For some reason destination is not in our DB\n        return;\n      }\n\n      if (travelOption.WalkDistance !== undefined) {\n        enqueueStopsByWalking(originStop, destinationStop, travelOption);\n      } else if (travelOption.TravelTime !== undefined) {\n        enqueueStopsByTraveling(originStop, destinationStop, travelOption);\n      }\n    });\n  };\n\n  const visitStop = (stop: StopWithTime) => {\n    const visitedBefore = visitedStopIds[stop.modelStop.id];\n    if (stop.lineChanges > MAX_LINE_CHANGES) {\n      // Too many line changes\n      return;\n    }\n    if (visitedBefore !== undefined) {\n      if (visitedBefore.remainingTime >= stop.remainingTime) {\n        // We have visited this stop before and last time it\n        // was faster then now\n        return;\n      }\n    }\n\n    // Override best stats for this stop\n    visitedStopIds[stop.modelStop.id] = { ...stop };\n\n    // Check all stops you can travel to\n    enqueueStopsYouCanTravelTo(stop);\n  };\n\n  // Try reaching out to all the stops in the vicinity\n  enqueueStopsWithinWalkingDistance(initialPosition, maxTravelTime, 0);\n\n  // Keep visiting until we run out of time\n  while (!toVisit.isEmpty()) {\n    visitStop(nullthrows(toVisit.pop()));\n  }\n\n  // Return visited stops with best times\n  return visitedStopIds;\n};\nexport function compileModel(model: Model, marker: ModelMarker): CompiledModel {\n  const stops = findAllReachableStops(\n    model,\n    marker.position,\n    marker.maxTravelTime\n  );\n\n  const pois = stops\n    .filter((stop: StopWithTime) => stop !== undefined)\n    .map((stop: StopWithTime) => {\n      const walkingTime = Math.min(stop.remainingTime, MAX_WALKING_TIME);\n      return {\n        bounds: stop.modelStop.position.toBounds(\n          2 * timeToDistance(walkingTime)\n        ),\n        lineChanges: stop.lineChanges,\n        walkTime: walkingTime,\n      };\n    });\n\n  // Don't forget to add the origin positionin case we  want to simply walk\n  const maxWalkTmeFromOrigin = Math.min(marker.maxTravelTime, MAX_WALKING_TIME);\n  pois.push({\n    bounds: marker.position.toBounds(2 * timeToDistance(maxWalkTmeFromOrigin)),\n    lineChanges: 0,\n    walkTime: maxWalkTmeFromOrigin,\n  });\n  return {\n    allPois: quadTreeFromAreaPois(pois),\n    marker,\n  };\n}\n","import React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n} from \"react\";\nimport nullthrows from \"nullthrows\";\nimport { CompiledModel, compileModel } from \"./CompiledModel\";\nimport { ModelContextInterface, useModelContext } from \"./ModelFetcher\";\nimport { ModelMarker } from \"./ModelMarker\";\n\nexport const CompiledModelsContext = createContext<CompiledModel[] | null>(\n  null\n);\nexport function useCompiledModesl(): CompiledModel[] {\n  return nullthrows(\n    useContext(CompiledModelsContext),\n    \"No compiled model provided: useCompiledModelContext() can only be used in a descendant of <ModelCompiler>\"\n  );\n}\n\ntype Props = {\n  children: ReactNode;\n  markers: ModelMarker[];\n};\n\nconst compiledModelReducer = (\n  state: CompiledModel[],\n  action: { id: number; compiledModel?: CompiledModel }\n): CompiledModel[] => {\n  const newState = [...state];\n  if (action.compiledModel !== undefined) {\n    // update action\n    newState[action.id] = action.compiledModel;\n  } else {\n    // delete action\n    newState.splice(action.id, 1);\n  }\n  return newState;\n};\n\nexport const ModelCompiler = ({ children, markers }: Props) => {\n  const modelContext = useModelContext();\n  const lastUsedModel = useRef<ModelContextInterface>();\n\n  const [compiledModels, dispatchCompiledModels] = useReducer(\n    compiledModelReducer,\n    []\n  );\n\n  const dirtyPositions = useMemo(() => {\n    const modelHasCHanged = lastUsedModel?.current !== modelContext;\n    return markers\n      .map((marker, id) =>\n        modelHasCHanged || compiledModels[id]?.marker !== marker ? id : null\n      )\n      .filter((marker_id) => marker_id !== null)\n      .map((marker_id) => nullthrows(marker_id));\n  }, [modelContext, lastUsedModel, compiledModels, markers]);\n\n  const deletedMarkersCount = compiledModels.length - markers.length;\n  useEffect(() => {\n    dirtyPositions.forEach((id) =>\n      dispatchCompiledModels({\n        id,\n        compiledModel: compileModel(modelContext.model, markers[id]),\n      })\n    );\n    for (\n      let id = markers.length;\n      id < markers.length + deletedMarkersCount;\n      id++\n    ) {\n      dispatchCompiledModels({ id });\n    }\n\n    lastUsedModel.current = modelContext;\n  }, [\n    dirtyPositions,\n    deletedMarkersCount,\n    markers,\n    modelContext,\n    lastUsedModel,\n  ]);\n\n  return (\n    <CompiledModelsContext.Provider value={compiledModels}>\n      {children}\n    </CompiledModelsContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { CanvasOverlay, onRender } from \"../map/CanvasOverlay\";\nimport { CompiledModel } from \"./CompiledModel\";\nimport {\n  CompiledModelsContext,\n  ModelCompiler,\n} from \"./ModelCompiler\";\nimport { ModelMarker } from \"./ModelMarker\";\n\ntype Props = {\n  markers: ModelMarker[];\n  onRender: onRender<CompiledModel[]>;\n};\n\nexport const CompiledModelOverlay = ({ markers, onRender }: Props) => {\n  return (\n    <ModelCompiler markers={markers}>\n      <CanvasOverlay onRender={onRender} modelContext={CompiledModelsContext} />\n    </ModelCompiler>\n  );\n};\n","import { DragEndEvent, Icon, LatLng } from \"leaflet\";\nimport { Marker } from \"react-leaflet\";\nimport React, { ReactNode, useMemo } from \"react\";\n\ntype Props = {\n  children?: ReactNode;\n  position: LatLng;\n  onPositionChange?: (newPosition: LatLng) => void;\n  icon?: Icon;\n};\n\nexport const MapMarker = ({\n  children,\n  position,\n  onPositionChange,\n  icon,\n}: Props) => {\n  const eventHandler = useMemo(\n    () => ({\n      dragend: (event: DragEndEvent) =>\n        onPositionChange && onPositionChange(event.target.getLatLng()),\n    }),\n    [onPositionChange]\n  );\n\n  return (\n    <Marker\n      position={position}\n      icon={icon}\n      draggable={onPositionChange !== undefined}\n      eventHandlers={eventHandler}\n    >\n      {children}\n    </Marker>\n  );\n};\n","import { LatLng, icon } from \"leaflet\";\nimport React, { ReactNode } from \"react\";\nimport { Popup } from \"react-leaflet\";\nimport \"./PaperMapMarker.css\";\nimport { MapMarker } from \"../map/MapMarker\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  paper: {\n    padding: 0,\n    margin: \"0 0 -1px 0\",\n    maxWidth: 500,\n  },\n});\n\nconst commuteMapIncon = icon({\n  iconUrl: process.env.PUBLIC_URL + \"/marker-icon.png\",\n  iconRetinaUrl: process.env.PUBLIC_URL + \"/marker-icon-2x.png\",\n  iconSize: [36, 41],\n  iconAnchor: [18, 41],\n  popupAnchor: [0, -36],\n  shadowUrl: process.env.PUBLIC_URL + \"/marker-icon-shadow.png\",\n  shadowSize: [46, 27],\n  shadowAnchor: [23, 13],\n});\n\ntype Props = {\n  position: LatLng;\n  onPositionChange?: (newPosition: LatLng) => void;\n  children: ReactNode;\n  closeButton: boolean;\n  minWidth?: number;\n};\n\nexport const PaperMapMarker = ({\n  position,\n  onPositionChange,\n  children,\n  closeButton,\n  minWidth,\n}: Props) => {\n  const classes = useStyles();\n  return (\n    <MapMarker\n      position={position}\n      onPositionChange={onPositionChange}\n      icon={commuteMapIncon}\n    >\n      <Popup minWidth={minWidth} closeButton={closeButton}>\n        <Paper className={classes.paper} elevation={3}>\n          {children}\n        </Paper>\n      </Popup>\n    </MapMarker>\n  );\n};\n","import { LatLng } from \"leaflet\";\nimport React, { useCallback } from \"react\";\nimport {\n  MAX_TRAVEL_TIME,\n  MIN_TRAVEL_TIME,\n  MIN_WIDTH_OF_POPUP,\n  TRAVEL_TIME_STEP,\n} from \"../../Constants\";\nimport { ModelMarker } from \"../../model/ModelMarker\";\nimport {\n  createStyles,\n  Grid,\n  Icon,\n  IconButton,\n  makeStyles,\n  Slider,\n  Theme,\n} from \"@material-ui/core\";\nimport { PaperMapMarker } from \"../../ui/PaperMapMarker\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    sliderContainerWithButtons: {\n      padding: theme.spacing(3, 3, 0, 2),\n    },\n    sliderContainerWithoutButtons: {\n      padding: theme.spacing(2, 3.5, 1.4, 2),\n    },\n    deleteButton: {\n      color: \"#c3c3c3\",\n    },\n  })\n);\n\ntype Props = {\n  marker: ModelMarker;\n  onMarkerChange: (newMarker: ModelMarker) => void;\n  onMarkerDelete?: () => void;\n};\n\nexport const ModelMapMarker = ({\n  marker,\n  onMarkerChange,\n  onMarkerDelete,\n}: Props) => {\n  const classes = useStyles();\n  const setMarkerPosition = useCallback(\n    (newPosition: LatLng) =>\n      onMarkerChange({ ...marker, position: newPosition }),\n    [marker, onMarkerChange]\n  );\n  const setTravelTime = useCallback(\n    (newTravelTime: number) =>\n      onMarkerChange({ ...marker, maxTravelTime: newTravelTime }),\n    [marker, onMarkerChange]\n  );\n  return (\n    <PaperMapMarker\n      position={marker.position}\n      onPositionChange={(newPosition) => setMarkerPosition(newPosition)}\n      minWidth={MIN_WIDTH_OF_POPUP}\n      closeButton={true}\n    >\n      <Grid container alignItems=\"flex-end\" direction=\"column\">\n        <Grid\n          container\n          alignItems=\"center\"\n          spacing={2}\n          className={\n            onMarkerDelete\n              ? classes.sliderContainerWithButtons\n              : classes.sliderContainerWithoutButtons\n          }\n        >\n          <Grid item>\n            <Icon>access_time</Icon>\n          </Grid>\n          <Grid item xs>\n            <Slider\n              value={marker.maxTravelTime}\n              step={TRAVEL_TIME_STEP}\n              min={MIN_TRAVEL_TIME}\n              max={MAX_TRAVEL_TIME}\n              valueLabelDisplay=\"auto\"\n              onChange={(_event, newValue) => {\n                newValue = newValue as number;\n                if (newValue !== marker.maxTravelTime) {\n                  setTravelTime(newValue);\n                }\n              }}\n            />\n          </Grid>\n        </Grid>\n        {onMarkerDelete && (\n          <Grid item>\n            <IconButton onClick={onMarkerDelete} size=\"small\">\n              <Icon fontSize=\"small\" className={classes.deleteButton}>\n                delete_forever\n              </Icon>\n            </IconButton>\n          </Grid>\n        )}\n      </Grid>\n    </PaperMapMarker>\n  );\n};\n","import { LatLng } from \"leaflet\";\nimport { DEFAULT_INITIAL_TRAVEL_TIME } from \"../Constants\";\nimport { City } from \"../utils/CityData\";\nimport { useModelMarkersState } from \"../utils/QueryStateCodecs\";\n\nexport type ModelMarker = {\n  position: LatLng;\n  maxTravelTime: number;\n};\n\n// Just a heuristics for creating deterministic points around city center\nexport const defaultModelMarker = (\n  city: City,\n  id: number,\n  maxTravelTime?: number\n): ModelMarker => {\n  maxTravelTime = maxTravelTime ?? DEFAULT_INITIAL_TRAVEL_TIME;\n\n  const center = city.position;\n  if (id === 0) {\n    return { position: center, maxTravelTime };\n  }\n\n  const poiBounds = center.toBounds(4000 + 1000 * id);\n  const edge = id % 4;\n\n  switch (edge) {\n    case 0:\n      return { position: poiBounds.getNorthWest(), maxTravelTime };\n    case 1:\n      return { position: poiBounds.getSouthEast(), maxTravelTime };\n    case 2:\n      return { position: poiBounds.getNorthEast(), maxTravelTime };\n    default:\n      return { position: poiBounds.getSouthWest(), maxTravelTime };\n  }\n};\n\nexport const useGlobalModelMarkersState = (initialValue: ModelMarker[]) => {\n  return useModelMarkersState(\"mrk\", initialValue, true);\n};\n","import React from \"react\";\nimport { TileInfo } from \"../map/CanvasOverlay\";\nimport { CompiledModel } from \"../model/CompiledModel\";\nimport DrawLib from \"../utils/DrawLib\";\nimport { CompiledModelOverlay } from \"../model/CompiledModelOverlay\";\nimport { ModelMapMarker } from \"../pages/city/ModelMapMarker\";\nimport {\n  defaultModelMarker,\n  useGlobalModelMarkersState,\n} from \"../model/ModelMarker\";\nimport { useModelContext } from \"../model/ModelFetcher\";\n\nconst onRender = (\n  compiledModels: CompiledModel[],\n  ctx: CanvasRenderingContext2D,\n  tileInfo: TileInfo\n): void => {\n  const d = new DrawLib(ctx, tileInfo);\n  const allPois =\n    compiledModels[0]?.allPois?.getIntersecting(tileInfo.tileBounds) ?? [];\n\n  d.fill(\"rgba(50,50,50,0.2)\");\n  allPois.forEach((poi) => d.drawCircle(poi.bounds));\n};\n\nexport const BestCommonTravelView = () => {\n  const city = useModelContext().city;\n  const [[marker1, marker2], setMarker] = useGlobalModelMarkersState([\n    defaultModelMarker(city, 0),\n    defaultModelMarker(city, 1),\n  ]);\n  return (\n    <>\n      <ModelMapMarker\n        marker={marker1}\n        onMarkerChange={(newMarker) => setMarker(0, newMarker)}\n      />\n      <ModelMapMarker\n        marker={marker2}\n        onMarkerChange={(newMarker) => setMarker(1, newMarker)}\n      />\n      <CompiledModelOverlay onRender={onRender} markers={[marker1]} />\n      <CompiledModelOverlay onRender={onRender} markers={[marker2]} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { TileInfo } from \"../map/CanvasOverlay\";\nimport { CompiledModel, ModelPoi } from \"../model/CompiledModel\";\nimport DrawLib from \"../utils/DrawLib\";\nimport { CompiledModelOverlay } from \"../model/CompiledModelOverlay\";\nimport { ModelMapMarker } from \"../pages/city/ModelMapMarker\";\nimport { useModelContext } from \"../model/ModelFetcher\";\nimport {\n  defaultModelMarker,\n  useGlobalModelMarkersState,\n} from \"../model/ModelMarker\";\n\nconst getPoiColor = (poi: ModelPoi): string | undefined => {\n  switch (poi.lineChanges) {\n    case 0:\n    case 1:\n      return undefined;\n    case 2:\n      return \"rgba(50,255,50,0.4)\";\n    case 3:\n      return \"rgba(255,255,50,0.4)\";\n    default:\n      return \"rgba(255,50,50,0.4)\";\n  }\n};\n\nconst sortPoi = (a: ModelPoi, b: ModelPoi): number => {\n  return b.lineChanges - a.lineChanges;\n};\n\nconst onRender = (\n  compiledModels: CompiledModel[],\n  ctx: CanvasRenderingContext2D,\n  tileInfo: TileInfo\n): void => {\n  const d = new DrawLib(ctx, tileInfo);\n  const allPois = compiledModels\n    .map((compiledModel) =>\n      compiledModel.allPois.getIntersecting(tileInfo.tileBounds)\n    )\n    .flat();\n\n  d.fill(\"rgba(50,50,50,0.4)\");\n  allPois\n    .sort(sortPoi)\n    .forEach((poi) => d.drawCircle(poi.bounds, getPoiColor(poi)));\n};\n\nexport const LineChangeView = () => {\n  const city = useModelContext().city;\n  const [[marker], setMarker] = useGlobalModelMarkersState([\n    defaultModelMarker(city, 0),\n  ]);\n  return (\n    <>\n      <ModelMapMarker\n        marker={marker}\n        onMarkerChange={(newMarker) => setMarker(0, newMarker)}\n      />\n      <CompiledModelOverlay onRender={onRender} markers={[marker]} />\n    </>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { BestCommonTravelView } from \"./BestCommonTravelView\";\nimport { LineChangeView } from \"./LineChangeView\";\n\nexport type View = {\n  key: string; // unique and url friendly\n  short_name: string;\n  description: string[];\n  component: ReactNode;\n};\n\n// Add your view here for it to be displayed as an option\nexport const ALL_VIEWS: View[] = [\n  {\n    key: \"lc\",\n    short_name: \"Show number of changes\",\n    description: [\n      `This mode helps to visualize the number of public transport changes needed to reach different\n       areas in the city for a given travel time.`,\n      `Each color represents different number of changes, starting with walking on foot. Move the marker \n      and change the travel time to explore.`,\n    ],\n    component: <LineChangeView />,\n  },\n  {\n    key: \"ct\",\n    short_name: \"Best areas to meet\",\n    description: [\n      `This mode can be used to find the best place to meet a friend. Place one of the pointers at the place \n      you live and the other one at the place your friend lives. Then chose the maximum time each of you is \n      willing to travel via public transport.`,\n      `You will see a map of the areas each of you can reach. Where these two areas overlap would be the ideal\n      spots for meeting.`,\n    ],\n    component: <BestCommonTravelView />,\n  },\n];\n\nexport const VIEWS_BY_KEY = new Map(ALL_VIEWS.map((v) => [v.key, v]));\nexport const DEFAULT_VIEW = ALL_VIEWS[0];\n","import {\n  Button,\n  Icon,\n  IconButton,\n  MenuItem,\n  Select,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { ModalAlert } from \"../../ui/ModalAlert\";\nimport { ALL_VIEWS, View } from \"../../views/ViewsRegistry\";\n\ntype Props = {\n  view: View;\n  onViewKeyChosen: (viewKey: string) => void;\n};\n\nexport const ViewChooser = ({ view, onViewKeyChosen }: Props) => {\n  const [infoOpen, setInfoOpen] = useState<boolean>(false);\n  return (\n    <>\n      <Select\n        value={view.key}\n        style={{ width: 260 }}\n        onChange={(event) => onViewKeyChosen(event.target.value as string)}\n        variant=\"outlined\"\n      >\n        {ALL_VIEWS.map((v) => (\n          <MenuItem key={`view_${v.key}`} value={v.key}>\n            {v.short_name}\n          </MenuItem>\n        ))}\n      </Select>\n      <IconButton edge=\"end\" color=\"inherit\" onClick={() => setInfoOpen(true)}>\n        <Icon>info</Icon>\n      </IconButton>\n      <ModalAlert title={view.short_name} severity=\"info\" open={infoOpen}>\n        {view.description.map((p, id) => (\n          <Typography key={`view_info_p_${id}`}>\n            <p>{p}</p>\n          </Typography>\n        ))}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          onClick={() => setInfoOpen(false)}\n        >\n          OK\n        </Button>\n      </ModalAlert>\n    </>\n  );\n};\n","import {\n  Button,\n  Icon,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  createStyles,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { City } from \"../../utils/CityData\";\nimport { ModalAlert } from \"../../ui/ModalAlert\";\nimport ReactMarkdown from \"react-markdown\";\nimport { MapTileProvider } from \"../../map/MapRender\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { SOURCE_CODE_LOCATION } from \"../../Constants\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogList: {\n      padding: theme.spacing(0, 1, 1, 1),\n    },\n  })\n);\n\ntype Props = {\n  city: City;\n  mapTileProvider: MapTileProvider;\n};\n\nconst TransportDataAttribution = ({ city }: { city: City }) => {\n  const classes = useStyles();\n  const copyright = city.copyright;\n  if (copyright === undefined) {\n    return (\n      <Typography>\n        Copyright Holders information for {city.cityname} public transport data\n        is available in{\" \"}\n        <Link href={SOURCE_CODE_LOCATION} target=\"_blank\">\n          the source code\n        </Link>\n        .\n      </Typography>\n    );\n  } else {\n    return (\n      <>\n        <Typography>\n          Copyright holders for {city.cityname} public transport data:\n        </Typography>\n        <List>\n          {copyright.map((c, id) => (\n            <ListItem key={`cright_${id}`} className={classes.dialogList}>\n              <ReactMarkdown linkTarget=\"_blank\">\n                {c.description\n                  ? `${c.ownerInfo}: ${c.description}`\n                  : c.ownerInfo}\n              </ReactMarkdown>\n            </ListItem>\n          ))}\n        </List>\n      </>\n    );\n  }\n};\n\nconst MapDataAttribution = ({\n  mapTileProvider,\n}: {\n  mapTileProvider: MapTileProvider;\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography>Copyright holders of map data displayed:</Typography>\n      <List>\n        <ListItem className={classes.dialogList}>\n          {HTMLReactParser(mapTileProvider.attribution)}\n        </ListItem>\n      </List>\n    </>\n  );\n};\n\nconst OpenSourceAttribution = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography>\n        All open source software used can be found in{\" \"}\n        <Link href={SOURCE_CODE_LOCATION} target=\"_blank\">\n          the source code\n        </Link>\n        . Notable mentions:\n      </Typography>\n      <List>\n        <ListItem className={classes.dialogList}>\n          <Link\n            href=\"https://github.com/mapnificent/mapnificent_cities\"\n            target=\"_blank\"\n          >\n            mapnificent_cities\n          </Link>\n          ,&nbsp;{\" \"}\n          <Link href=\"https://leafletjs.com/\" target=\"_blank\">\n            leaflet\n          </Link>\n          ,&nbsp;{\" \"}\n          <Link href=\"https://material-ui.com/\" target=\"_blank\">\n            Material UI\n          </Link>\n        </ListItem>\n      </List>\n    </>\n  );\n};\n\nexport const Attribution = ({ city, mapTileProvider }: Props) => {\n  const [open, setOpen] = useState<boolean>(false);\n  return (\n    <>\n      <ListItem button key=\"attribution\" onClick={() => setOpen(true)}>\n        <ListItemIcon>\n          <Icon>copyright</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Attribution\" />\n      </ListItem>\n      <ModalAlert\n        title=\"Attribution, Copyright and Open Source\"\n        severity=\"info\"\n        open={open}\n      >\n        <TransportDataAttribution city={city} />\n        <MapDataAttribution mapTileProvider={mapTileProvider} />\n        <OpenSourceAttribution />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          onClick={() => setOpen(false)}\n        >\n          OK\n        </Button>\n      </ModalAlert>\n    </>\n  );\n};\n","import React, { useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CITY_DATA, { City } from \"../../utils/CityData\";\nimport { CityMap } from \"./CityMap\";\nimport { ModalAlert } from \"../../ui/ModalAlert\";\nimport { Divider, List, Typography } from \"@material-ui/core\";\nimport { GoHomeButton } from \"../../ui/GoHomeButton\";\nimport { ProgressBar } from \"../../ui/ProgressBar\";\nimport { MapNavigationDrawer } from \"../../ui/MapNavigationDrawer\";\nimport { AppMainNavigationList } from \"../../AppMainNavigationList\";\nimport { QueryState, useQueryParameterState } from \"../../utils/QueryState\";\nimport { ViewChooser } from \"./ViewChooser\";\nimport { DEFAULT_VIEW, VIEWS_BY_KEY } from \"../../views/ViewsRegistry\";\nimport { Attribution } from \"./Attribution\";\nimport { DEFAULT_MAP_TILE_PROVIDER } from \"../../Constants\";\n\nconst CITY_MAP = new Map<string, City>(CITY_DATA.map((c) => [c.cityid, c]));\n\nconst ModelLoadError = ({\n  city,\n  modelLoadError,\n}: {\n  city: City;\n  modelLoadError: any;\n}) => {\n  console.error(modelLoadError);\n  return (\n    <ModalAlert title={`Failed to load data`} severity=\"error\">\n      <Typography>\n        Public transport data for {city.cityname} failed to load. Please start\n        again to retry or select a different city.\n      </Typography>\n      <GoHomeButton>Start again</GoHomeButton>\n    </ModalAlert>\n  );\n};\n\nconst CityNotFoundError = () => {\n  return (\n    <ModalAlert title=\"Broken link\" severity=\"error\">\n      <Typography>\n        You have followed a broken link. Please go back to the home page and\n        start again.\n      </Typography>\n      <GoHomeButton>Start again</GoHomeButton>\n    </ModalAlert>\n  );\n};\n\nconst LoadingCityInfo = ({\n  city,\n  modelLoadProgress,\n}: {\n  city: City;\n  modelLoadProgress?: number;\n}) => {\n  return (\n    <ModalAlert\n      title={<>Loading {city.cityname} data&#8230;</>}\n      severity=\"info\"\n    >\n      <ProgressBar progress={modelLoadProgress} />\n      <Typography>\n        Public transport data is being loaded. This should not take long.\n      </Typography>\n      <GoHomeButton>Cancel</GoHomeButton>\n    </ModalAlert>\n  );\n};\n\nconst CityPageContent = (param: { cityid: string }) => {\n  const mapTileProvider = DEFAULT_MAP_TILE_PROVIDER;\n  const city = useMemo(() => CITY_MAP.get(param.cityid), [param.cityid]);\n  const [modelLoadError, setModelLoadError] = useState<any>();\n  const [modelLoadProgress, setModelLoadProgress] = useState<number>();\n\n  const [viewKey, setViewKey] = useQueryParameterState(\n    \"v\",\n    DEFAULT_VIEW.key,\n    true\n  );\n  const view = useMemo(() => VIEWS_BY_KEY.get(viewKey) ?? DEFAULT_VIEW, [\n    viewKey,\n  ]);\n\n  if (city === undefined) {\n    return <CityNotFoundError />;\n  }\n  if (modelLoadError !== undefined) {\n    return <ModelLoadError city={city} modelLoadError={modelLoadError} />;\n  }\n\n  return (\n    <>\n      <MapNavigationDrawer\n        alwaysVisibleComponent={\n          <ViewChooser view={view} onViewKeyChosen={setViewKey} />\n        }\n      >\n        <AppMainNavigationList />\n        <Divider />\n        <List>\n          <Attribution city={city} mapTileProvider={mapTileProvider} />\n        </List>\n      </MapNavigationDrawer>\n      <CityMap\n        city={city}\n        view={view}\n        mapTileProvider={mapTileProvider}\n        loadingPlaceholder={\n          <LoadingCityInfo city={city} modelLoadProgress={modelLoadProgress} />\n        }\n        onModelLoadError={setModelLoadError}\n        onModelLoadProgress={setModelLoadProgress}\n      />\n    </>\n  );\n};\n\nexport const CityPage = () => {\n  const { cityid } = useParams<{ cityid: string }>();\n  return (\n    <QueryState>\n      <CityPageContent cityid={cityid} />\n    </QueryState>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport CITY_DATA, { City } from \"../../utils/CityData\";\nimport { Icon, TextField, withStyles } from \"@material-ui/core\";\n\ntype Props = {\n  label: string;\n  onCityChosen: (city: City) => void;\n};\n\nconst CssTextField = withStyles({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderWidth: \"0\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderWidth: \"1px\",\n      },\n    },\n  },\n})(TextField);\n\nexport const CityChooser = ({ label, onCityChosen }: Props) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Autocomplete\n      disableClearable\n      options={CITY_DATA}\n      getOptionLabel={(city) => city.cityname}\n      style={{ width: 290 }}\n      onChange={(_event: any, newCity: City | null) => {\n        if (newCity !== null) {\n          onCityChosen(newCity);\n        }\n      }}\n      popupIcon={<Icon>search</Icon>}\n      forcePopupIcon={!open}\n      renderInput={(params) => (\n        <CssTextField {...params} label={label} variant=\"outlined\" />\n      )}\n      open={open}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n    />\n  );\n};\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { MIN_WIDTH_OF_POPUP } from \"../../Constants\";\nimport { PaperMapMarker } from \"../../ui/PaperMapMarker\";\nimport { City } from \"../../utils/CityData\";\n\ntype Props = {\n  city: City;\n  onSelected: () => void;\n};\n\nexport const CityMarker = ({ city, onSelected }: Props) => {\n  return (\n    <PaperMapMarker\n      position={city.position}\n      closeButton={false}\n      minWidth={MIN_WIDTH_OF_POPUP}\n    >\n      <Button fullWidth onClick={onSelected}>\n        Select {city.cityname}\n      </Button>\n    </PaperMapMarker>\n  );\n};\n","import React from \"react\";\nimport { DEFAULT_MAP_TILE_PROVIDER } from \"../../Constants\";\nimport { MapRender } from \"../../map/MapRender\";\nimport { CityMarker } from \"./CityMarker\";\nimport CITY_DATA, { City } from \"../../utils/CityData\";\n\ntype Props = {\n  onCityChosen: (city: City) => void;\n};\n\nexport const HomeMap = ({ onCityChosen }: Props) => {\n  return (\n    <MapRender\n      id=\"main_map\"\n      mapTileProvider={DEFAULT_MAP_TILE_PROVIDER}\n      initialCenter={[20, 11]}\n      initialZoom={3}\n    >\n      {CITY_DATA.map((city) => (\n        <CityMarker\n          key={city.cityid}\n          city={city}\n          onSelected={() => onCityChosen(city)}\n        />\n      ))}\n    </MapRender>\n  );\n};\n","import { CityChooser } from \"./CityChooser\";\nimport { useHistory } from \"react-router-dom\";\nimport React from \"react\";\nimport { AppMainNavigationList } from \"../../AppMainNavigationList\";\nimport { MapNavigationDrawer } from \"../../ui/MapNavigationDrawer\";\nimport { HomeMap } from \"./HomeMap\";\nimport { useCallback } from \"react\";\nimport { City } from \"../../utils/CityData\";\n\nexport const HomePage = () => {\n  const history = useHistory();\n  const onCityChosen = useCallback(\n    (city: City) => history.push(`/city/${city.cityid}`),\n    [history]\n  );\n  return (\n    <>\n      <MapNavigationDrawer\n        alwaysVisibleComponent={\n          <CityChooser label=\"Select city\" onCityChosen={onCityChosen} />\n        }\n      >\n        <AppMainNavigationList />\n      </MapNavigationDrawer>\n      <HomeMap onCityChosen={onCityChosen} />\n    </>\n  );\n};\n","import \"./App.css\";\nimport { CityPage } from \"./pages/city/CityPage\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport React from \"react\";\nimport { HomePage } from \"./pages/home/HomePage\";\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter basename='/'>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/city/:cityid\">\n            <CityPage />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"material-icons/iconfont/material-icons.css\"\nimport { App } from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('react_root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}